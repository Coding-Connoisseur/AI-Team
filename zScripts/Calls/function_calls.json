{
    "./test_task_priority_queue.py": {
        "setUp": {
            "outgoing_calls": [
                "TaskPriorityQueue"
            ],
            "incoming_calls": []
        },
        "test_enqueue_task": {
            "outgoing_calls": [
                "len"
            ],
            "incoming_calls": []
        },
        "test_dequeue_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_queue_emptiness": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_peek_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    },
    "./system.py": {
        "__init__": {
            "outgoing_calls": [
                "TaskPriorityQueue",
                "DynamicThreadPoolExecutor",
                "LoadBalancer",
                "TaskMonitor",
                "AgentHealthMonitor",
                "SystemMonitor",
                "HealthCheckManager",
                "SystemMonitor"
            ],
            "incoming_calls": []
        },
        "get_user_input": {
            "outgoing_calls": [
                "print",
                "print",
                "print",
                "print",
                "print",
                "print",
                "input",
                "int"
            ],
            "incoming_calls": []
        },
        "ask_for_project_path": {
            "outgoing_calls": [
                "input",
                "print"
            ],
            "incoming_calls": []
        },
        "receive_user_input": {
            "outgoing_calls": [
                "print",
                "input",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "decompose_project": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "assign_tasks": {
            "outgoing_calls": [
                "set",
                "hasattr",
                "print"
            ],
            "incoming_calls": []
        },
        "find_agent_for_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "execute_task": {
            "outgoing_calls": [
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "handle_agent_feedback": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "recover_from_failure": {
            "outgoing_calls": [
                "min",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "update_task_status": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "mark_task_completed": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "report_progress": {
            "outgoing_calls": [
                "print",
                "print",
                "print",
                "print",
                "print",
                "print",
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "report_overall_progress": {
            "outgoing_calls": [
                "len",
                "len",
                "len",
                "print",
                "print",
                "print",
                "print",
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "retry_task": {
            "outgoing_calls": [
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "record_failure": {
            "outgoing_calls": [
                "print",
                "print"
            ],
            "incoming_calls": []
        }
    },
    "./knowledge_base.py": {
        "__init__": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "store": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "get": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "delete": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "list_contents": {
            "outgoing_calls": [
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "store_task_metadata": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        },
        "get_task_metadata": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "list_all_task_metadata": {
            "outgoing_calls": [
                "print",
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        }
    },
    "./test_load_balancer.py": {
        "setUp": {
            "outgoing_calls": [
                "LoadBalancer",
                "BaseAgent",
                "BaseAgent"
            ],
            "incoming_calls": []
        },
        "test_distribute_task_evenly": {
            "outgoing_calls": [
                "len",
                "len"
            ],
            "incoming_calls": []
        },
        "test_assign_task_to_least_loaded_agent": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_update_agent_load": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    },
    "./agent_health_monitor.py": {
        "__init__": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "record_task": {
            "outgoing_calls": [
                "ValueError"
            ],
            "incoming_calls": []
        },
        "display_health": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        },
        "monitor_agent_health": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        },
        "trigger_rebalance": {
            "outgoing_calls": [
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "assign_task": {
            "outgoing_calls": [
                "min",
                "print"
            ],
            "incoming_calls": []
        },
        "task_completed": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "perform_health_check": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        }
    },
    "./agents.py": {
        "__init__": {
            "outgoing_calls": [
                "super"
            ],
            "incoming_calls": []
        },
        "can_handle": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "execute_task": {
            "outgoing_calls": [
                "print",
                "print",
                "open",
                "open",
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "learn": {
            "outgoing_calls": [
                "super"
            ],
            "incoming_calls": []
        },
        "query_improvements": {
            "outgoing_calls": [
                "print",
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "adjust_behavior": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        },
        "change_strategy": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        },
        "adjust_strategy": {
            "outgoing_calls": [
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "generate_project_structure": {
            "outgoing_calls": [
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "parse_structure": {
            "outgoing_calls": [
                "defaultdict",
                "dict",
                "len"
            ],
            "incoming_calls": []
        },
        "fallback_structure": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "create_structure": {
            "outgoing_calls": [
                "print",
                "isinstance",
                "print",
                "print",
                "open",
                "print"
            ],
            "incoming_calls": []
        },
        "generate_advanced_code": {
            "outgoing_calls": [
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "run_tests": {
            "outgoing_calls": [
                "print",
                "print",
                "print",
                "print",
                "print",
                "print",
                "print",
                "str"
            ],
            "incoming_calls": []
        },
        "generate_detailed_documentation": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        },
        "generate_api_docs": {
            "outgoing_calls": [
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "generate_code_annotations": {
            "outgoing_calls": [
                "print",
                "print",
                "isinstance",
                "print",
                "isinstance",
                "print"
            ],
            "incoming_calls": []
        },
        "generate_workflow_diagrams": {
            "outgoing_calls": [
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "perform_security_audit": {
            "outgoing_calls": [
                "print",
                "print",
                "print",
                "print",
                "print",
                "str"
            ],
            "incoming_calls": []
        },
        "fix_vulnerabilities": {
            "outgoing_calls": [
                "print",
                "open",
                "print",
                "open",
                "open"
            ],
            "incoming_calls": []
        }
    },
    "./test_health_check_manager.py": {
        "setUp": {
            "outgoing_calls": [
                "HealthCheckManager",
                "BaseAgent",
                "BaseAgent"
            ],
            "incoming_calls": []
        },
        "test_health_check": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_health_status": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_recover_unhealthy_agents": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    },
    "./test_knowledge_base.py": {
        "setUp": {
            "outgoing_calls": [
                "SharedKnowledgeBase"
            ],
            "incoming_calls": []
        },
        "test_store_and_retrieve_knowledge": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_retrieve_non_existent_key": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_remove_knowledge": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    },
    "./test_main.py": {
        "test_main_flow_create_project": {
            "outgoing_calls": [
                "patch",
                "patch"
            ],
            "incoming_calls": []
        },
        "test_main_flow_debug_project": {
            "outgoing_calls": [
                "patch",
                "patch"
            ],
            "incoming_calls": []
        }
    },
    "./task_priority_queue.py": {
        "__init__": {
            "outgoing_calls": [
                "LinearRegression"
            ],
            "incoming_calls": []
        },
        "add_task": {
            "outgoing_calls": [
                "print",
                "len",
                "print",
                "set"
            ],
            "incoming_calls": []
        },
        "get_next_task": {
            "outgoing_calls": [
                "set",
                "print",
                "all",
                "print",
                "set"
            ],
            "incoming_calls": []
        },
        "_is_circular_dependency": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "display_pending_tasks": {
            "outgoing_calls": [
                "print",
                "sorted",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "log_task_data": {
            "outgoing_calls": [
                "len",
                "zip",
                "print"
            ],
            "incoming_calls": []
        },
        "update_task_priority": {
            "outgoing_calls": [
                "enumerate",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "mark_task_complete": {
            "outgoing_calls": [
                "print",
                "print"
            ],
            "incoming_calls": []
        }
    },
    "./load_balancer.py": {
        "__init__": {
            "outgoing_calls": [
                "DecisionTreeRegressor",
                "SharedKnowledgeBase",
                "super"
            ],
            "incoming_calls": []
        },
        "assign_task": {
            "outgoing_calls": [
                "next",
                "print",
                "super"
            ],
            "incoming_calls": []
        },
        "estimate_task_duration": {
            "outgoing_calls": [
                "sum",
                "print",
                "print",
                "len"
            ],
            "incoming_calls": []
        },
        "task_completed": {
            "outgoing_calls": [
                "max",
                "print"
            ],
            "incoming_calls": []
        },
        "monitor_resource_usage": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "collect_data": {
            "outgoing_calls": [
                "len",
                "int"
            ],
            "incoming_calls": []
        },
        "train_model": {
            "outgoing_calls": [
                "len"
            ],
            "incoming_calls": []
        }
    },
    "./health_check_manager.py": {
        "__init__": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "perform_health_check": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        }
    },
    "./test_agent_health_monitor.py": {
        "setUp": {
            "outgoing_calls": [
                "LoadBalancer",
                "AgentHealthMonitor",
                "BaseAgent"
            ],
            "incoming_calls": []
        },
        "test_record_task_success": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_record_task_failure": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_trigger_rebalance_on_failure": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    },
    "./test_task_monitor.py": {
        "setUp": {
            "outgoing_calls": [
                "BaseAgent",
                "TaskMonitor"
            ],
            "incoming_calls": []
        },
        "test_start_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_complete_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_task_failure": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    },
    "./test_dynamic_thread_pool.py": {
        "setUp": {
            "outgoing_calls": [
                "DynamicThreadPoolExecutor"
            ],
            "incoming_calls": []
        },
        "tearDown": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_submit_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_adjust_worker_count": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_task_execution_with_delay": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "sample_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "delayed_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    },
    "./test_system.py": {
        "setUp": {
            "outgoing_calls": [
                "System"
            ],
            "incoming_calls": []
        },
        "test_get_cpu_usage": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_get_memory_usage": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_get_disk_usage": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "test_get_network_usage": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    },
    "./task_monitor.py": {
        "__init__": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "start_task": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        },
        "end_task": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        },
        "get_average_time": {
            "outgoing_calls": [
                "print",
                "print",
                "sum",
                "len"
            ],
            "incoming_calls": []
        },
        "display_task_statistics": {
            "outgoing_calls": [
                "print",
                "print",
                "len",
                "sum",
                "print"
            ],
            "incoming_calls": []
        }
    },
    "./test_agents.py": {
        "setUp": {
            "outgoing_calls": [
                "SharedKnowledgeBase",
                "ProjectArchitectAI",
                "CodeGeneratorAI",
                "TestAI",
                "DebuggingAI",
                "EnhancerAI",
                "DocumentationAI",
                "DeploymentAI",
                "SecurityAI",
                "DatabaseAI",
                "LoggingAI",
                "VersionControlAI",
                "FrontendGeneratorAI"
            ],
            "incoming_calls": []
        },
        "test_agents_can_handle": {
            "outgoing_calls": [
                "hasattr"
            ],
            "incoming_calls": []
        },
        "test_agents_execute_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    },
    "./system_monitor.py": {
        "__init__": {
            "outgoing_calls": [],
            "incoming_calls": []
        },
        "monitor_resources": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        },
        "check_alerts": {
            "outgoing_calls": [
                "print",
                "print",
                "print",
                "print"
            ],
            "incoming_calls": []
        },
        "get_network_sent_usage": {
            "outgoing_calls": [
                "min"
            ],
            "incoming_calls": []
        },
        "trigger_alert": {
            "outgoing_calls": [
                "print"
            ],
            "incoming_calls": []
        }
    },
    "./dynamic_thread_pool.py": {
        "__init__": {
            "outgoing_calls": [
                "ThreadPoolExecutor"
            ],
            "incoming_calls": []
        },
        "adjust_workers": {
            "outgoing_calls": [
                "max",
                "ThreadPoolExecutor",
                "print",
                "min",
                "ThreadPoolExecutor",
                "print"
            ],
            "incoming_calls": []
        },
        "monitor_resource_usage": {
            "outgoing_calls": [
                "min",
                "min"
            ],
            "incoming_calls": []
        },
        "submit_task": {
            "outgoing_calls": [],
            "incoming_calls": []
        }
    }
}